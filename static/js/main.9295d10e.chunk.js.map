{"version":3,"sources":["App.js","index.js"],"names":["App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","loadState","state","JSON","parse","localStorage","getItem","setState","objectSpread","saveState","stringify","setItem","componentDidMount","componentWillUpdate","componentWillUnmount","areAllCompleted","toggleAll","filteredTodos","every","todo","completed","handleInputChange","event","properValue","target","value","replace","inputValue","handleCheckboxChange","id","prevState","map","todos","handleFilter","showCompleted","showActive","handleAddTodo","title","concat","toConsumableArray","lastId","filter","handleDelCompl","handleDelTodo","handleTodoChange","todoValue","handleTodoSave","editTodoId","toggleAllCompl","_this2","react_default","a","createElement","className","onSubmit","preventDefault","placeholder","onChange","style","display","type","checked","htmlFor","key","border","autoFocus","onBlur","onDoubleClick","onClick","length","href","some","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9295d10e.chunk.js","sourcesContent":["import React from 'react';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      todos: [],\n      filteredTodos: [],\n      inputValue: '',\n      lastId: 0,\n      editTodoId: 0,\n      todoValue: '',\n      toggleAll: false,\n      showActive: 1,\n      showCompleted: 1,\n    };\n  }\n\n  loadState = () => {\n    const state = JSON.parse(localStorage.getItem('state'));\n    this.setState({ ...state });\n  }\n\n  saveState = () => {\n    const state = JSON.stringify(this.state);\n    localStorage.setItem('state', state);\n  }\n\n  componentDidMount = () => {\n    this.loadState();\n  }\n\n  componentWillUpdate = () => {\n    this.saveState();\n  }\n\n  componentWillUnmount = () => {\n    this.saveState();\n  }\n\n  areAllCompleted = () => {\n    let toggleAll = false;\n\n    if (this.state.filteredTodos[0]) {\n      toggleAll = this.state.filteredTodos.every(\n        todo => todo.completed === true\n      );\n    }\n\n    this.setState({ toggleAll });\n  }\n\n  handleInputChange = (event) => {\n    const { value } = event.target;\n    const properValue = value.replace(/[^\\wА-Яа-яЁё ,.?!@&*()$\"\":;><]/g, '');\n\n    this.setState({\n      inputValue: properValue,\n    });\n  }\n\n  handleCheckboxChange = (id) => {\n    this.setState(prevState => ({\n\n      filteredTodos: prevState.filteredTodos.map((todo) => {\n        todo.completed = todo.id === id ? !todo.completed : todo.completed;\n        return todo;\n      }),\n\n      todos: prevState.todos.map((todo) => {\n        todo.completed = todo.id === id ? !todo.completed : todo.completed;\n        return todo;\n      }),\n    }),\n\n    () => {\n      this.handleFilter(this.state.showCompleted, this.state.showActive);\n    },);\n  }\n\n  handleAddTodo = (title) => {\n    this.setState(prevState => ({\n      todos: [\n        ...prevState.todos,\n        {\n          id: prevState.lastId + 1,\n          title,\n          completed: false,\n        },\n      ],\n      filteredTodos: [\n        ...prevState.filteredTodos,\n        {\n          id: prevState.lastId + 1,\n          title,\n          completed: false,\n        },\n      ],\n      lastId: prevState.lastId + 1,\n      inputValue: '',\n    }),\n\n    () => {\n      this.handleFilter(this.state.showCompleted, this.state.showActive);\n    },);\n  }\n\n  handleFilter = (showCompleted, showActive) => {\n    const filteredTodos = JSON.parse(JSON.stringify(this.state.todos));\n\n    this.setState({\n      filteredTodos: filteredTodos.filter(todo => (\n        (showCompleted && todo.completed === true)\n        || (showActive && todo.completed === false)\n      )),\n      showActive,\n      showCompleted,\n    },\n\n    () => {\n      this.areAllCompleted();\n    });\n  }\n\n  handleDelCompl = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => !todo.completed),\n      filteredTodos: prevState.filteredTodos.filter(todo => !todo.completed),\n    }));\n  }\n\n  handleDelTodo = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== id),\n      filteredTodos: prevState.filteredTodos.filter(todo => todo.id !== id),\n    }),\n\n    () => {\n      this.areAllCompleted();\n    },);\n  }\n\n  handleTodoChange = (event) => {\n    const { value } = event.target;\n    const properValue = value.replace(/[^\\wА-Яа-яЁё ,.?!@&*()$\"\":;><]/g, '');\n\n    this.setState({\n      todoValue: properValue,\n    });\n  }\n\n  handleTodoSave = (id, title) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map((todo) => {\n        if (todo.id === id) {\n          todo.title = title;\n        }\n        return todo;\n      }),\n      filteredTodos: prevState.filteredTodos.map((todo) => {\n        if (todo.id === id) {\n          todo.title = title;\n        }\n        return todo;\n      }),\n      editTodoId: 0,\n    }));\n  }\n\n  toggleAllCompl = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map((todo) => {\n        todo.completed = !prevState.toggleAll;\n        return todo;\n      }),\n      filteredTodos: prevState.filteredTodos.map((todo) => {\n        todo.completed = !prevState.toggleAll;\n        return todo;\n      }),\n      toggleAll: !prevState.toggleAll,\n    }),\n\n    () => {\n      this.handleFilter(this.state.showCompleted, this.state.showActive);\n    },);\n  }\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <form\n            onSubmit={(event) => {\n              event.preventDefault();\n              this.handleAddTodo(this.state.inputValue);\n            }}\n          >\n            <input\n              className=\"new-todo\"\n              placeholder=\"What needs to be done?\"\n              value={this.state.inputValue}\n              onChange={event => this.handleInputChange(event)}\n            />\n          </form>\n        </header>\n\n        <section className=\"main\" style={{ display: 'block' }}>\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            checked={this.state.toggleAll}\n            onChange={() => this.toggleAllCompl()}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n          <ul className=\"todo-list\">\n            {this.state.filteredTodos.map(todo => (\n              <li className={todo.completed ? 'completed' : ''} key={todo.id}>\n                <div className=\"view\">\n                  <input\n                    type=\"checkbox\"\n                    className=\"toggle\"\n                    id={todo.id}\n                    checked={todo.completed}\n                    onChange={() => this.handleCheckboxChange(todo.id)}\n                  />\n\n                  {this.state.editTodoId === todo.id\n                    ? (\n                      <form\n                        onSubmit={(event) => {\n                          event.preventDefault();\n                          this.handleTodoSave(todo.id, this.state.todoValue);\n                        }}\n                      >\n                        <input\n                          className=\"new-todo\"\n                          style={{ border: '1px solid grey' }}\n                          value={this.state.todoValue}\n                          onChange={event => this.handleTodoChange(event)}\n                          autoFocus\n                          onBlur={(event) => {\n                            event.preventDefault();\n                            this.handleTodoSave(todo.id, this.state.todoValue);\n                          }}\n                        />\n                      </form>\n                    )\n                    : (\n                      <label\n                        onDoubleClick={() => this.setState({\n                          editTodoId: todo.id,\n                          todoValue: todo.title,\n                        })}\n                      >\n                        {todo.title}\n                      </label>\n                    )\n                  }\n\n                  <button\n                    type=\"button\"\n                    className=\"destroy\"\n                    onClick={() => this.handleDelTodo(todo.id)}\n                  />\n                </div>\n              </li>\n            ))}\n          </ul>\n        </section>\n\n        <footer className=\"footer\" style={{ display: 'block' }}>\n          <span className=\"todo-count\">\n            {this.state.todos.filter(todo => todo.completed === false).length} items left\n          </span>\n\n          <ul className=\"filters\">\n            <li>\n              <a\n                href=\"#/\"\n                className={this.state.showCompleted && this.state.showActive\n                  ? 'selected'\n                  : ''\n                }\n                onClick={() => this.handleFilter(1, 1)}\n              >\n                All\n              </a>\n            </li>\n\n            <li>\n              <a\n                href=\"#/active\"\n                className={!this.state.showCompleted && this.state.showActive\n                  ? 'selected'\n                  : ''\n                }\n                onClick={() => this.handleFilter(0, 1)}\n              >\n                Active\n              </a>\n            </li>\n\n            <li>\n              <a\n                href=\"#/completed\"\n                className={this.state.showCompleted && !this.state.showActive\n                  ? 'selected'\n                  : ''\n                }\n                onClick={() => this.handleFilter(1, 0)}\n              >\n                Completed\n              </a>\n            </li>\n          </ul>\n\n          <button\n            type=\"button\"\n            className=\"clear-completed\"\n            style={this.state.filteredTodos.some(todo => todo.completed)\n              ? { display: 'block' }\n              : { display: 'none' }\n            }\n            onClick={() => this.handleDelCompl()}\n          >\n            Clear completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}